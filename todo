Generating residual program. Options - free vars. No free vars. ETC.

Applications:

1. "Minimal" programs (search the most descriptive and concise variant of the given program).
2. Transformations with lemmas/theorems.
3. Different approximation - as in Klimov paper.
4. Implement call-by-name (reference implementation), call-by-value and call-by-need.



Experiment configuration:
1)   whistle
2) 	 how to fold -> in path only or also in all completed nodes
3) 	 just count or generate results??
4) 	 speculation - yes/no
5) 	 how to generalize -? always or only on whistle??
5.a) it is possible to find only superConfigurations with respect to e1, e2
6) lemmas
7) replace/forest on generalization
8) global/local control
9) (maximal) free expression extraction - reducing number of argument of function




TODO: find the case where e1 < e2 but msg = e2. Can it be done by just driving??

TODO: we can blame all expressions